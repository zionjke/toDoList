{"version":3,"sources":["assets/img/add.svg","assets/img/remove.svg","assets/img/star.svg","assets/img/close.svg","assets/img/login.png","assets/img/log-out.png","dal/api.js","redux/todolistsReducer.js","actions/todolist.js","components/List/List.jsx","components/Tasks/TodoListTask.jsx","components/Tasks/TodoListTasks.jsx","components/Footer/TodoListFooter.jsx","components/Title/TodoListTitle.jsx","components/AddNewItemForm.jsx","components/AddTask/AddTaskForm.jsx","components/TodoList.jsx","components/AddList/AddList.jsx","actions/login.js","actions/auth.js","redux/authReducer.js","redux/loginReducer.js","components/LoginForm/LoginForm.jsx","components/LoginForm/AuthBlock.jsx","App.js","redux/store.js","index.js"],"names":["module","exports","__webpack_require__","p","loginInstance","axios","create","baseURL","withCredentials","instance","headers","API-KEY","api","title","post","then","response","data","get","todoId","concat","delete","taskID","task","obj","put","id","Object","objectSpread2","initialState","todolists","activeList","getTodoLists","dispatch","type","todolistsReducer","state","arguments","length","undefined","action","map","todo","tasks","todolistId","toConsumableArray","newTodolist","newTask","taskId","filter","t","List","deleteList","list","window","confirm","_this","props","_this2","this","react_default","a","createElement","className","lists","key","onClick","onClickList","src","starSvg","alt","removeSvg","React","Component","TodoListTask","isEditMode","activatedEditMode","setState","deactivatedEditMode","e","changeTitle","currentTarget","value","onIsDoneChanged","changeStatus","checked","onIsDeleteTask","deleteTask","render","addedDate","dateformat","console","log","isDone","status","classForTask","onChange","htmlFor","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","defaultValue","autoFocus","onBlur","TodoListTasks","taskItem","Tasks_TodoListTask","TodoListFooter","onAllFilterClick","changeFilter","onCompletedFilterClick","onActiveFilterClick","classForAll","filterValue","classForCompleted","classForActive","Fragment","TodoListTitle","editTitle","AddNewItemForm","error","onAddItemClick","newTitle","trim","addItem","closePopup","toggleFormVisible","onTitleChanged","onKeyPress","classForInput","placeholder","btnname","cancelButton","AddTaskForm","isVisibleForm","components_AddNewItemForm","addTask","addSvg","TodoList","newFilterValue","changeTask","changeTodoTask","editTaskTitle","deleteTodoTask","changeTodoTitle","editTodoTitle","_this$props$tasks","filteredTask","Title_TodoListTitle","Tasks_TodoListTasks","Footer_TodoListFooter","components_AddTask_AddTaskForm","getTodoTasks","connect","item","updateTask","items","AddList","visiblePopup","setVisiblePopup","closeSvg","addTodoList","statuses","setStatus","setIsAuth","isAuth","userInfo","userId","login","authMe","_ref","resultCode","authReducer","message","captchaUrl","loginReducer","auth","email","password","rememberMe","messages","react_router","to","emailRef","createRef","passwordRef","rememberMeRef","ref","disabled","current","AuthBlock","onLogOutClick","logOut","logOutIcon","react_router_dom","loginIcon","location","reload","App","setActiveList","createTodoList","deleteTodolist","deleteTodoList","path","components_LoginForm_LoginForm","components_LoginForm_AuthBlock","components_List_List","todolist","activelist","components_AddList_AddList","components_TodoList","ConnectedApp","store","createStore","combineReducers","applyMiddleware","thunk","ReactDOM","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.149d2269.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/add.78cc8215.svg\";","module.exports = __webpack_public_path__ + \"static/media/remove.b36a3633.svg\";","module.exports = __webpack_public_path__ + \"static/media/star.c2427492.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.1175686f.svg\";","module.exports = __webpack_public_path__ + \"static/media/login.a181d29b.png\";","module.exports = __webpack_public_path__ + \"static/media/log-out.75c0363f.png\";","import axios from \"axios\";\r\n\r\nexport const loginInstance = axios.create({\r\n    baseURL:'https://social-network.samuraijs.com/api/1.1',\r\n    withCredentials: true,\r\n});\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.1/todo-lists\",\r\n    withCredentials: true,\r\n    headers: {\"API-KEY\": \"db79da77-d4ed-4333-9c43-3bf4d5e71c39\"}\r\n});\r\n\r\n\r\nexport const api = {\r\n    createTodolist(title) {\r\n        return instance.post('', {title: title}).then(response => response.data);\r\n    },\r\n    getTodolist() {\r\n        return instance.get(\"\",).then(response => response.data);\r\n    },\r\n    addTask(title, todoId) {\r\n        return instance.post(`/${todoId}/tasks`, {title: title},).then(response => response.data)\r\n    },\r\n\r\n    getTasks(todoId) {\r\n        return instance.get(`/${todoId}/tasks`).then(response => response.data)\r\n    },\r\n\r\n    deleteTodo(todoId) {\r\n        return instance.delete(`/${todoId}`).then(response => response)\r\n    },\r\n\r\n    deleteTask(todoId,taskID) {\r\n        return  instance.delete(`/${todoId}/tasks/${taskID}`).then(response => response)\r\n    },\r\n\r\n    changeTask(task,obj,todoId) {\r\n        return instance.put(`/${todoId}/tasks/${task.id}`,\r\n            {\r\n                ...task,\r\n                ...obj\r\n            },\r\n            )\r\n            .then(response => response)\r\n    },\r\n\r\n    changeTodoTitle(todoId,title) {\r\n        return instance.put(`/${todoId}`,{title:title}).then(response=>response)\r\n    }\r\n};","import {\r\n    CHANGE_TASK,\r\n    CHANGE_TODO_TITLE, changeTodoTitle,\r\n    CREATE_TASK,\r\n    CREATE_TODOLIST, createTask, createTodo, DELETE_TASK, DELETE_TODO, deleteTask, deleteTodo, SET_ACTIVE_LIST,\r\n    SET_TODOLISTS,\r\n    SET_TODOLISTS_TASKS, setTasks, setTodoList, updateTask\r\n} from \"../actions/todolist\";\r\nimport {api} from \"../dal/api\";\r\n\r\nconst initialState = {\r\n    todolists: [],\r\n    activeList: ''\r\n};\r\n\r\nconst todolistsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TODOLISTS:\r\n            return {\r\n                ...state,\r\n                todolists: action.todolists.map(todo => {\r\n                    return {\r\n                        ...todo,\r\n                        tasks: []\r\n                    }\r\n                })\r\n            };\r\n        case SET_TODOLISTS_TASKS:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map (todo => {\r\n                    if(todo.id !== action.todolistId) {\r\n                        return todo\r\n                    } else {\r\n                        return {\r\n                            ...todo,\r\n                            tasks: action.task\r\n                        }\r\n                    }\r\n                })\r\n            };\r\n        case CREATE_TODOLIST:\r\n            return {\r\n                ...state,\r\n                todolists: [...state.todolists, action.newTodolist]\r\n            };\r\n        case CREATE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(todo => {\r\n                        if (todo.id !== action.todolistId) {\r\n                            return todo\r\n                        } else {\r\n                            return {\r\n                                ...todo,\r\n                                tasks: [...todo.tasks, action.newTask]\r\n                            }\r\n                        }\r\n                    }\r\n                )\r\n            };\r\n        case CHANGE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(todo => {\r\n                    if (todo.id !== action.todolistId) {\r\n                        return todo\r\n                    } else {\r\n                        return {\r\n                            ...todo,\r\n                            tasks: todo.tasks.map(task => {\r\n                                if (task.id !== action.taskId) {\r\n                                    return task\r\n                                } else {\r\n                                    return {\r\n                                        ...task,\r\n                                        ...action.obj\r\n                                    }\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                })\r\n            };\r\n        case CHANGE_TODO_TITLE:{\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(todo => {\r\n                    if(todo.id !== action.todolistId){\r\n                        return todo\r\n                    } else {\r\n                        return {\r\n                            ...todo,\r\n                            title: action.title\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        case DELETE_TODO:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.filter(todo => todo.id !== action.todolistId)\r\n            };\r\n        case DELETE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(todo => {\r\n                    if (todo.id !== action.todolistId) {\r\n                        return todo\r\n                    } else {\r\n                        return {\r\n                            ...todo,\r\n                            tasks: todo.tasks.filter(t => t.id !== action.taskId)\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        case SET_ACTIVE_LIST:\r\n            return {\r\n                ...state,\r\n                activeList: action.activeList\r\n            }\r\n\r\n    }\r\n    return state;\r\n};\r\n\r\nexport const createTodoList = (title) => (dispatch) => {\r\n    api.createTodolist(title).then(response => {\r\n        dispatch(createTodo(response.data.item))\r\n    });\r\n};\r\n\r\nexport const getTodoLists = () => (dispatch) => {\r\n    api.getTodolist().then(response => {\r\n        dispatch(setTodoList(response))\r\n    });\r\n};\r\n\r\nexport const getTodoTasks = (todoId) => (dispatch) => {\r\n    api.getTasks(todoId).then(response => {\r\n        dispatch(setTasks(todoId, response.items))\r\n    })\r\n};\r\n\r\nexport const addTask = (title, todoId) => (dispatch) => {\r\n    api.addTask(title, todoId).then(response => {\r\n        dispatch(createTask(response.data.item, todoId))\r\n    });\r\n};\r\n\r\nexport const deleteTodoList = (todoId) => (dispatch) => {\r\n    api.deleteTodo(todoId).then(() => {\r\n        dispatch(deleteTodo(todoId))\r\n    });\r\n};\r\n\r\nexport const editTodoTitle = (todoId, title) => (dispatch) => {\r\n    api.changeTodoTitle(todoId, title).then(() => {\r\n        dispatch(changeTodoTitle(todoId, title))\r\n    })\r\n};\r\n\r\nexport const deleteTodoTask = (taskId, todoId) => (dispatch) => {\r\n    api.deleteTask(todoId, taskId).then(() => {\r\n        dispatch(deleteTask(taskId, todoId))\r\n    });\r\n};\r\n\r\nexport const changeTodoTask = (task, obj, todoId) => (dispatch) => {\r\n    api.changeTask(task, obj, todoId).then(() => {\r\n        dispatch(updateTask(task.id, obj, todoId))\r\n    });\r\n};\r\n\r\n\r\n\r\nexport default todolistsReducer","export const CREATE_TODOLIST = 'TODOLIST/APP/CREATE_TODOLIST';\r\nexport const CREATE_TASK = 'TODOLIST/APP/CREATE_TASK';\r\nexport const CHANGE_TASK = 'TODOLIST/APP/CHANGE_TASK';\r\nexport const DELETE_TODO = 'TODOLIST/APP/DELETE_TODO';\r\nexport const DELETE_TASK = 'TODOLIST/APP/DELETE_TASK';\r\nexport const SET_TODOLISTS = 'TODOLIST/APP/SET_TODOLISTS';\r\nexport const SET_ACTIVE_LIST = 'TODOLIST/APP/SET_ACTIVE_LIST';\r\nexport const SET_TODOLISTS_TASKS = 'TODOLIST/APP/SET_TODOLISTS_TASKS';\r\nexport const CHANGE_TODO_TITLE = 'TODOLIST/APP/CHANGE_TODO_TITLE';\r\n\r\nexport const createTodo = (newTodolist) => {\r\n    return {\r\n        type: CREATE_TODOLIST,\r\n        newTodolist\r\n    }\r\n};\r\n\r\nexport const createTask = (newTask, todolistId) => {\r\n    return {\r\n        type: CREATE_TASK,\r\n        newTask,\r\n        todolistId\r\n    }\r\n};\r\n\r\nexport const updateTask = (taskId, obj, todolistId) => {\r\n    return {\r\n        type: CHANGE_TASK,\r\n        taskId: taskId,\r\n        obj: obj,\r\n        todolistId: todolistId\r\n    }\r\n};\r\n\r\nexport const deleteTodo = (todolistId) => {\r\n    return {\r\n        type: DELETE_TODO,\r\n        todolistId: todolistId\r\n    }\r\n};\r\n\r\nexport const deleteTask = (taskId, todolistId) => {\r\n    return {\r\n        type: DELETE_TASK,\r\n        taskId: taskId,\r\n        todolistId: todolistId\r\n    }\r\n};\r\n\r\nexport const setTodoList = (todolists) => {\r\n    return {\r\n        type: SET_TODOLISTS,\r\n        todolists\r\n    }\r\n};\r\n\r\nexport const setTasks = (todolistId,task) => {\r\n    return{\r\n        type: SET_TODOLISTS_TASKS,\r\n        todolistId,\r\n        task\r\n    }\r\n};\r\n\r\nexport const changeTodoTitle =(todolistId,title) => {\r\n    return {\r\n        type: CHANGE_TODO_TITLE,\r\n        todolistId,\r\n        title\r\n    }\r\n};\r\n\r\nexport const setActiveList = (activeList) => {\r\n    return {\r\n        type: SET_ACTIVE_LIST,\r\n        activeList\r\n    }\r\n}","import React from 'react'\r\nimport removeSvg from '../../assets/img/remove.svg'\r\nimport starSvg from '../../assets/img/star.svg'\r\nimport './List.scss'\r\n\r\n\r\n\r\nclass List extends React.Component {\r\n\r\n    deleteList = list => {\r\n        if (window.confirm('Вы действительно хотите удалить список?')) {\r\n            this.props.deleteList(list.id)\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n                <ul className=\"list\">\r\n                    {this.props.lists.map((list) => (\r\n                        <li key={list.id}\r\n                            className={ this.props.activeList.id === list.id && 'active'}\r\n                            onClick={() => this.props.onClickList(list)}>\r\n                            <img\r\n                                className='list__star-icon'\r\n                                src={starSvg}\r\n                                alt=\"Star icon\"\r\n                            />\r\n\r\n                                <span>\r\n                                    {list.title}\r\n                                </span>\r\n\r\n                            <img\r\n                                className=\"list__remove-icon\"\r\n                                src={removeSvg}\r\n                                alt=\"Remove icon\"\r\n                                onClick={() => this.deleteList(list)}\r\n                                />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default List","import React from 'react';\r\nimport './Tasks.scss'\r\nimport * as dateformat from \"dateformat\";\r\n\r\nclass TodoListTask extends React.Component {\r\n\r\n    state = {\r\n        isEditMode: false\r\n    };\r\n\r\n    activatedEditMode = () => {\r\n        this.setState({isEditMode: true})\r\n    };\r\n\r\n    deactivatedEditMode = (e) => {\r\n        this.props.changeTitle(this.props.task, e.currentTarget.value);\r\n        this.setState({isEditMode: false})\r\n    };\r\n\r\n    onIsDoneChanged = (e) => {\r\n        this.props.changeStatus(this.props.task, e.currentTarget.checked)\r\n    };\r\n\r\n\r\n\r\n    onIsDeleteTask = () => {\r\n        if(window.confirm('Вы действительно хотите удалить задачу?')) {\r\n            this.props.deleteTask(this.props.task.id)\r\n        }\r\n    };\r\n\r\n    render = () => {\r\n\r\n\r\n        let addedDate = dateformat(this.props.task.addedDate, \"default\")\r\n        console.log(addedDate)\r\n\r\n\r\n\r\n        let isDone = this.props.task.status === 2;\r\n        let classForTask = isDone ? \"task done\" : \"task\";\r\n\r\n        return (\r\n            <div className={classForTask}>\r\n                <div className=\"checkbox\">\r\n                    <input\r\n                        id={`task-${this.props.task.id}`}\r\n                        type=\"checkbox\"\r\n                        checked={isDone}\r\n                        onChange={this.onIsDoneChanged}\r\n                    />\r\n                    <label htmlFor={`task-${this.props.task.id}`}>\r\n                        <svg\r\n                            width=\"11\"\r\n                            height=\"8\"\r\n                            viewBox=\"0 0 11 8\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                            <path\r\n                                d=\"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\"\r\n                                stroke=\"#000\"\r\n                                strokeWidth=\"1.5\"\r\n                                strokeLinecap=\"round\"\r\n                                strokeLinejoin=\"round\"\r\n                            />\r\n                        </svg>\r\n                    </label>\r\n                </div>\r\n\r\n                {this.state.isEditMode\r\n                    ? <input defaultValue={this.props.task.title}\r\n                             autoFocus={true}\r\n                             onBlur={this.deactivatedEditMode}\r\n                            />\r\n                    : <span onClick={this.activatedEditMode}>\r\n                             {this.props.task.title}\r\n                    </span>\r\n                }\r\n                <div className='delete_task' onClick={this.onIsDeleteTask}>\r\n                    <div>\r\n                        <svg\r\n                            width=\"11\"\r\n                            height=\"11\"\r\n                            viewBox=\"0 0 11 11\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                            <path\r\n                                d=\"M6.87215 5.5L10.7129 1.65926C10.8952 1.47731 10.9977 1.23039 10.9979 0.972832C10.9982 0.715276 10.8961 0.468178 10.7141 0.285898C10.5321 0.103617 10.2852 0.00108525 10.0277 0.000857792C9.77011 0.000630336 9.52302 0.102726 9.34074 0.284685L5.5 4.12542L1.65926 0.284685C1.47698 0.102404 1.22976 0 0.971974 0C0.714191 0 0.466965 0.102404 0.284685 0.284685C0.102404 0.466965 0 0.714191 0 0.971974C0 1.22976 0.102404 1.47698 0.284685 1.65926L4.12542 5.5L0.284685 9.34074C0.102404 9.52302 0 9.77024 0 10.028C0 10.2858 0.102404 10.533 0.284685 10.7153C0.466965 10.8976 0.714191 11 0.971974 11C1.22976 11 1.47698 10.8976 1.65926 10.7153L5.5 6.87458L9.34074 10.7153C9.52302 10.8976 9.77024 11 10.028 11C10.2858 11 10.533 10.8976 10.7153 10.7153C10.8976 10.533 11 10.2858 11 10.028C11 9.77024 10.8976 9.52302 10.7153 9.34074L6.87215 5.5Z\"\r\n                                fill=\"black\"\r\n                            />\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default TodoListTask;\r\n\r\n","import React from 'react';\r\nimport TodoListTask from \"./TodoListTask\";\r\nimport './Tasks.scss'\r\n\r\nclass TodoListTasks extends React.Component {\r\n    render = () => {\r\n\r\n        let taskItem = this.props.tasks.map ( task => <TodoListTask key={task.id}\r\n                                                                  task={task}\r\n                                                                  changeStatus={this.props.changeStatus}\r\n                                                                  changeTitle={this.props.changeTitle}\r\n                                                                  deleteTask={this.props.deleteTask}/>);\r\n\r\n        return (\r\n            <div className=\"todo__tasks\">\r\n                {this.props.tasks && !this.props.tasks.length ? <h2>Задачи отсутствуют</h2> : taskItem}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListTasks;\r\n\r\n","import React from 'react';\r\nimport './Footer.scss'\r\n\r\nclass TodoListFooter extends React.Component {\r\n\r\n\r\n    onAllFilterClick = () => {this.props.changeFilter(\"All\")};\r\n    onCompletedFilterClick = () => {this.props.changeFilter(\"Completed\")};\r\n    onActiveFilterClick = () => {this.props.changeFilter(\"Active\")};\r\n\r\n    render = () => {\r\n\r\n        let classForAll = this.props.filterValue === \"All\" ? \"button-active\" : \"\";\r\n        let classForCompleted = this.props.filterValue === \"Completed\" ? \"button-active\" : \"\";\r\n        let classForActive = this.props.filterValue === \"Active\" ? \"button-active\" : \"\";\r\n\r\n        return (\r\n            <>\r\n                {this.props.tasks && this.props.tasks.length >= 1 && <div className=\"todo__footer\">\r\n                     <div>\r\n                        <button  onClick={this.onAllFilterClick} className={`${classForAll} button`}>Все</button>\r\n                        <button onClick={this.onCompletedFilterClick} className={`${classForCompleted} button`}>Выполненные</button>\r\n                        <button onClick={this.onActiveFilterClick} className={`${classForActive} button`}>Активные</button>\r\n                    </div>\r\n                </div> }\r\n\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListFooter;\r\n\r\n","import React from 'react';\r\nimport './Title.scss'\r\n\r\nclass TodoListTitle extends React.Component {\r\n\r\n    state = {\r\n        isEditMode: false\r\n    };\r\n\r\n    activatedEditMode = () => {\r\n        this.setState({isEditMode: true})\r\n    };\r\n\r\n    deactivatedEditMode = (e) => {\r\n        this.props.editTitle(e.currentTarget.value);\r\n        this.setState({isEditMode: false})\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <div className=\"todo__title\">\r\n                {this.state.isEditMode\r\n                    ? <input className='field' defaultValue={this.props.title}\r\n                             autoFocus={true}\r\n                             onBlur={this.deactivatedEditMode}\r\n                    />\r\n                    : <span onClick={this.activatedEditMode}>\r\n                             {this.props.title}\r\n                    </span>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListTitle\r\n\r\n\r\n","import React from 'react';\r\n\r\nclass AddNewItemForm extends React.Component {\r\n\r\n    state = {\r\n        error: false,\r\n        title: \"\"\r\n    };\r\n\r\n    onAddItemClick = () => {\r\n        let newTitle = this.state.title.trim();\r\n        if (newTitle === \"\") {\r\n            this.setState({\r\n                error: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                error: false,\r\n                title: \"\"\r\n            });\r\n            this.props.addItem(newTitle);\r\n            this.props.closePopup && this.props.closePopup();\r\n            this.props.toggleFormVisible && this.props.toggleFormVisible();\r\n        }\r\n\r\n    };\r\n\r\n    onTitleChanged = (e) => {\r\n        this.setState({\r\n            error: false,\r\n            title: e.currentTarget.value\r\n        });\r\n    };\r\n\r\n    onKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            this.onAddItemClick();\r\n        }\r\n    };\r\n\r\n    render = () => {\r\n\r\n        let classForInput = this.state.error ? \"error\" : \"\";\r\n\r\n        return (\r\n                    <>\r\n                        <input\r\n                            placeholder={this.props.placeholder}\r\n                            className={`field ${classForInput}`}\r\n                            onChange={this.onTitleChanged}\r\n                            onKeyPress={this.onKeyPress}\r\n                            value={this.state.title}\r\n                            type=\"text\"\r\n                        />\r\n                        <button className='button' onClick={this.onAddItemClick}>{this.props.btnname}</button>\r\n                        {this.props.cancelButton &&\r\n                        <button onClick={this.props.toggleFormVisible} className='button button--grey'>Отмена</button>\r\n                        }\r\n                    </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddNewItemForm;\r\n\r\n","import React from 'react'\r\nimport AddNewItemForm from \"../AddNewItemForm\";\r\nimport addSvg from './../../assets/img/add.svg'\r\nimport './AddTaskForm.scss'\r\n\r\nclass AddTaskForm extends React.Component {\r\n\r\n    state = {\r\n        isVisibleForm: false\r\n    };\r\n\r\n    toggleFormVisible = () => {\r\n        this.setState({\r\n            isVisibleForm: !this.state.isVisibleForm\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='tasks__form'>\r\n                {!this.state.isVisibleForm ? <div onClick={this.toggleFormVisible} className='tasks__form-new'>\r\n                                                <img src={addSvg} alt=\"Add Icon\"/>\r\n                                                <span>Новая задача</span>\r\n                                             </div>\r\n                    : <div className='tasks__form-block'>\r\n                        <AddNewItemForm cancelButton\r\n                                        btnname='Добавить задачу'\r\n                                        addItem={this.props.addTask}\r\n                                        toggleFormVisible={this.toggleFormVisible}\r\n                                        placeholder='Имя задачи'/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTaskForm","import React from 'react';\r\nimport TodoListTasks from \"./Tasks/TodoListTasks\";\r\nimport TodoListFooter from \"./Footer/TodoListFooter\";\r\nimport TodoListTitle from \"./Title/TodoListTitle\";\r\nimport {connect} from \"react-redux\";\r\nimport {addTask, changeTodoTask, deleteTodoTask, editTodoTitle, getTodoTasks} from \"../redux/todolistsReducer\";\r\n\r\nimport AddTaskForm from \"./AddTask/AddTaskForm\";\r\n\r\nclass TodoList extends React.Component {\r\n\r\n    state = {\r\n        filterValue: \"All\",\r\n    };\r\n\r\n\r\n    addTask = (title) => {\r\n        this.props.addTask(title, this.props.id)\r\n    };\r\n\r\n    changeFilter = (newFilterValue) => {\r\n        this.setState({\r\n            filterValue: newFilterValue\r\n        });\r\n    };\r\n\r\n    changeTask = (task, obj) => {\r\n        this.props.changeTodoTask(task, obj, this.props.id)\r\n    }\r\n\r\n    changeStatus = (task, isDone) => {\r\n        this.changeTask(task, {status: isDone ? 2 : 0});\r\n    };\r\n\r\n    editTaskTitle = (task, newTitle) => {\r\n        this.changeTask(task, {title: newTitle});\r\n    };\r\n\r\n\r\n    deleteTask = (taskID) => {\r\n        this.props.deleteTodoTask(taskID, this.props.id)\r\n    };\r\n\r\n    changeTodoTitle = (title) => {\r\n        this.props.editTodoTitle(this.props.id, title)\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.getTodoTasks(this.props.id)\r\n    };\r\n\r\n\r\n    render = () => {\r\n\r\n        let {tasks = []} = this.props;\r\n\r\n        let filteredTask = tasks.filter(task => {\r\n            if (this.state.filterValue === \"All\") {\r\n                return true;\r\n            }\r\n            if (this.state.filterValue === \"Active\") {\r\n                return task.status !== 2;\r\n            }\r\n            if (this.state.filterValue === \"Completed\") {\r\n                return task.status === 2;\r\n            }\r\n        });\r\n\r\n        return (\r\n            <>\r\n                <TodoListTitle title={this.props.title}\r\n                               editTitle={this.changeTodoTitle}/>\r\n                <TodoListTasks changeStatus={this.changeStatus}\r\n                               changeTitle={this.editTaskTitle}\r\n                               tasks={filteredTask}\r\n                               deleteTask={this.deleteTask}/>\r\n                <TodoListFooter changeFilter={this.changeFilter}\r\n                                filterValue={this.state.filterValue}\r\n                                tasks={this.props.tasks}/>\r\n                <AddTaskForm addTask={this.addTask}/>\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, {\r\n    addTask,\r\n    changeTodoTask,\r\n    deleteTodoTask,\r\n    getTodoTasks,\r\n    editTodoTitle\r\n})(TodoList)\r\n\r\n","import React from 'react'\r\nimport addSvg from '../../assets/img/add.svg'\r\nimport closeSvg from '../../assets/img/close.svg'\r\nimport './AddList.scss'\r\nimport AddNewItemForm from \"../AddNewItemForm\";\r\n\r\nclass AddList extends React.Component {\r\n\r\n    state = {\r\n        visiblePopup: false\r\n    }\r\n\r\n    setVisiblePopup = () => {\r\n        this.setState({\r\n            visiblePopup: true\r\n        })\r\n    };\r\n\r\n    closePopup = () => {\r\n        this.setState({\r\n            visiblePopup: false\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <div className='add-list'>\r\n                <ul onClick={this.setVisiblePopup}>\r\n                    <li className='add-list__add-button'>\r\n                        <img src={addSvg} alt=\"Add icon\"/>\r\n                        <span>Добавить список</span>\r\n                    </li>\r\n                </ul>\r\n                {this.state.visiblePopup &&\r\n                <div className=\"add-list__popup\">\r\n                    <img\r\n                        onClick={this.closePopup}\r\n                        src={closeSvg}\r\n                        alt=\"Close button\"\r\n                        className=\"add-list__popup-close-btn\"\r\n                    />\r\n                    <AddNewItemForm btnname='Добавить список'\r\n                                    addItem={this.props.addTodoList}\r\n                                    closePopup={this.closePopup}\r\n                                    placeholder='Название списка'/>\r\n                </div> }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddList","export const statuses = {\r\n    INIT: 'INIT',\r\n    ERROR: 'ERROR',\r\n    INPROGRESS: 'INPROGRESS',\r\n    CAPTCHAREQUIRED: 'CAPTCHAREQUIRED',\r\n    SUCCESS: 'SUCCESS'\r\n};\r\n\r\nexport const SET_STATUS = 'APP/LOGIN/SET_STATUS';\r\nexport const SET_MESSAGE = 'APP/LOGIN/SET_MESSAGE';\r\n\r\n\r\nexport const setStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    }\r\n};\r\n\r\nexport const setMessage = (message) => {\r\n    return {\r\n        type: SET_MESSAGE,\r\n        message\r\n    }\r\n};","export const SET_IS_AUTH = 'APP/AUTH/SET_IS_AUTH';\r\nexport const SET_USER_INFO = 'APP/AUTH/SET_USER_INFO';\r\n\r\nexport const setIsAuth = (isAuth) => {\r\n    return {\r\n        type: SET_IS_AUTH,\r\n        isAuth\r\n    }\r\n};\r\n\r\nexport const setUserInfo = (userId,login) => {\r\n    return {\r\n        type: SET_USER_INFO,\r\n        userId,login\r\n    }\r\n};","import {SET_IS_AUTH, SET_USER_INFO, setIsAuth, setUserInfo} from \"../actions/auth\";\r\nimport {loginInstance} from \"../dal/api\";\r\nimport {getTodoLists} from \"./todolistsReducer\";\r\n\r\nconst initialState = {\r\n    isAuth:false,\r\n    userInfo: {\r\n        userId: null,\r\n        login: null,\r\n    }\r\n};\r\n\r\nconst authReducer = (state = initialState,action) => {\r\n    switch (action.type) {\r\n        case SET_IS_AUTH:\r\n            return {\r\n                ...state,\r\n                isAuth: action.isAuth\r\n            };\r\n        case SET_USER_INFO:\r\n            return {\r\n                ...state,\r\n                userInfo: {\r\n                    ...state.userInfo,\r\n                    login: action.login,\r\n                    userId: action.userId\r\n                }\r\n            }\r\n    }\r\n    return state\r\n};\r\n\r\nexport const authMe = () => (dispatch) => {\r\n    loginInstance.get('auth/me').then(({data}) => {\r\n        if(data.resultCode === 0) {\r\n            dispatch(setIsAuth(true));\r\n            dispatch(setUserInfo(data.data.userId,data.data.login))\r\n        }\r\n    })\r\n};\r\n\r\nexport const logOut = () => (dispatch) => {\r\n    loginInstance.delete('auth/login').then(() => {\r\n        dispatch(setIsAuth(false))\r\n        window.location.reload(false); // refresh page\r\n    })\r\n};\r\n\r\n\r\nexport default authReducer","import {loginInstance} from \"../dal/api\";\r\nimport {SET_MESSAGE, SET_STATUS, setMessage, setStatus, statuses} from \"../actions/login\";\r\nimport {setIsAuth} from \"../actions/auth\";\r\nimport {authMe} from \"./authReducer\";\r\nimport {getTodoLists} from \"./todolistsReducer\";\r\n\r\n\r\nconst initialState = {\r\n    isAuth:'',\r\n    status: statuses.INIT,\r\n    message:'',\r\n    captchaUrl:''\r\n};\r\n\r\nconst loginReducer = (state=initialState,action) => {\r\n    switch (action.type) {\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        case SET_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: action.message\r\n            }\r\n    }\r\n    return state\r\n};\r\n\r\nexport const login = (email,password,rememberMe,) => (dispatch) => {\r\n    dispatch(setStatus(statuses.INPROGRESS));\r\n    loginInstance.post('auth/login', {\r\n        email,\r\n        password,\r\n        rememberMe\r\n    }).then((response) => {\r\n        if(response.data.resultCode === 0) {\r\n            dispatch(setStatus(statuses.SUCCESS));\r\n            dispatch(setIsAuth(true));\r\n            dispatch(authMe());\r\n            dispatch(getTodoLists())\r\n        } else {\r\n            dispatch(setStatus(statuses.ERROR));\r\n            dispatch(setMessage(response.data.messages[0]))\r\n        }\r\n    })\r\n};\r\n\r\n\r\n\r\nexport default loginReducer","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/loginReducer\";\r\nimport {statuses} from \"../../actions/login\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport './LoginForm.scss'\r\n\r\nexport const LoginForm = ({status,message,login,isAuth}) => {\r\n\r\n    if(isAuth) {\r\n        return <Redirect to='/'/>\r\n    }\r\n\r\n    let emailRef = React.createRef();\r\n    let passwordRef = React.createRef();\r\n    let rememberMeRef = React.createRef();\r\n\r\nconst onClickLogin = () => {\r\n    login && login(emailRef.current.value,\r\n        passwordRef.current.value,\r\n        rememberMeRef.current.checked)\r\n};\r\n\r\n    return (\r\n        <div className='login__form'>\r\n            <h2>Login</h2>\r\n            <input className='field' ref={emailRef} placeholder='Введите свой email' type=\"text\"/>\r\n            <input  className='field' ref={passwordRef} placeholder='Введите пароль'  type=\"password\"/>\r\n            <span>Remember my:</span><input ref={rememberMeRef} type=\"checkbox\"/>\r\n                <button className='button' disabled={status === statuses.INPROGRESS} onClick={onClickLogin}>\r\n                    Sign in\r\n                </button>\r\n\r\n            {\r\n                status === statuses.ERROR &&\r\n            <div className='error'>\r\n                {message}\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        status: state.login.status,\r\n        message: state.login.message,\r\n        captchaUrl: state.login.captchaUrl\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps,{login})(LoginForm)","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {authMe, logOut} from \"../../redux/authReducer\";\r\nimport loginIcon from '../../assets/img/login.png'\r\nimport './AuthBlock.scss'\r\nimport logOutIcon from './../../assets/img/log-out.png'\r\n\r\n\r\nclass AuthBlock extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.authMe()\r\n    }\r\n\r\n    onLogOutClick = () => {\r\n        if(window.confirm('Вы действительно хотите выйти?')) {\r\n            this.props.logOut()\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {isAuth} = this.props;\r\n        return (\r\n            <div className='auth__block'>\r\n                {isAuth && <img className={'auth__block-logout'} onClick={this.onLogOutClick} src={logOutIcon} alt=\"Log Out Icon\"/>}\r\n                {!isAuth && <div>\r\n                    <NavLink to='/login'>\r\n                        <img className='auth__block-login' src={loginIcon} alt=\"Login Icon\"/>\r\n                    </NavLink>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        userInfo: state.auth.userInfo\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps,{authMe,logOut})(AuthBlock)","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {createTodoList, deleteTodoList, getTodoLists} from \"./redux/todolistsReducer\";\r\nimport List from \"./components/List/List\";\r\nimport TodoList from \"./components/TodoList\";\r\nimport AddList from \"./components/AddList/AddList\";\r\nimport {setActiveList} from \"./actions/todolist\";\r\nimport {Route} from \"react-router-dom\";\r\nimport LoginForm from \"./components/LoginForm/LoginForm\";\r\nimport AuthBlock from \"./components/LoginForm/AuthBlock\";\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n    onClickList = (list) => {\r\n        this.props.setActiveList(list)\r\n    };\r\n\r\n\r\n    addTodoList = (title) => {\r\n        this.props.createTodoList(title)\r\n\r\n    };\r\n\r\n    deleteTodolist = (todoId) => {\r\n        this.props.deleteTodoList(todoId)\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.getTodoLists()\r\n    };\r\n\r\n\r\n    render = () => {\r\n\r\n        return (\r\n                <div className='todo'>\r\n                    <Route path='/login' render={() => <LoginForm/>}/>\r\n                    <div className=\"todo__sidebar\">\r\n                        <AuthBlock/>\r\n                        <List lists={this.props.todolist}\r\n                              onClickList={this.onClickList}\r\n                              activeList={this.props.activelist}\r\n                              deleteList={this.deleteTodolist}/>\r\n                        <AddList addTodoList={this.addTodoList}/>\r\n                    </div>\r\n                    <div className=\"todo__lists\">\r\n                        {this.props.todolist.map(todo => {\r\n                            if(todo.id === this.props.activelist.id) {\r\n                                return <TodoList key={todo.id}\r\n                                                 id={todo.id}\r\n                                                 title={todo.title}\r\n                                                 tasks={todo.tasks}/>\r\n                            }\r\n                        })}\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todolist: state.todolist.todolists,\r\n        activelist: state.todolist.activeList\r\n\r\n    }\r\n};\r\n\r\n\r\n\r\nconst ConnectedApp = connect(mapStateToProps, {createTodoList,getTodoLists,deleteTodoList,setActiveList})(App);\r\n\r\nexport default ConnectedApp;\r\n\r\n\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport loginReducer from \"./loginReducer\";\r\nimport todolistsReducer from \"./todolistsReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport authReducer from \"./authReducer\";\r\n\r\n\r\nconst store = createStore(combineReducers({\r\n    login: loginReducer,\r\n    todolist: todolistsReducer,\r\n    auth: authReducer\r\n}),applyMiddleware(thunk));\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport store from \"./redux/store\";\r\nimport {Provider} from \"react-redux\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>,\r\n    document.getElementById('root'));\r\n\r\n\r\n\r\n"],"sourceRoot":""}